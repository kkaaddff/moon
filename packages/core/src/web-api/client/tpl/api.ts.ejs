import sdk from "@api/sdk";

import isMock from  './mock-util';
const controllerName = "<%-webapiGroup.name %>"

<% webapiGroup.apis.forEach(apiItem=>{ %>

/**
 *
 * <%=apiItem.comment%>
 *
 */
async function <%=Util.getMethodName(apiItem.name)%>(
    <% apiItem.requestParam.forEach(paramItem=>{ %>
        <%=paramItem.name%>:<%=Util.genInterfaceName(apiItem.name,paramItem.name,"req")%>,
    <% }) %>
):Promise< <%= Util.getTypeNameFromSchema(apiItem.responseSchema) %> > {

  if(__DEV__){
    if(isMock("<%-webapiGroup.name %>","<%=Util.getMethodName(apiItem.name)%>")){
      return Promise.resolve(require('./mock/<%-webapiGroup.name %>.json').<%= Util.getTypeNameFromSchema(apiItem.responseSchema) %>||{});
    }
  }

  let result = await sdk.<%=Util.getMethodName(apiItem.method)%> <%-apiItem.responseSchema? "<"+Util.getTypeNameFromSchema(apiItem.responseSchema) +">":""%>(
  "<%=apiItem.url%>"
    <% apiItem.requestParam.forEach(paramItem=>{ %>
           <% if (paramItem.isInPath) { %>
           .replace("{<%-paramItem.name %>}",<%-paramItem.name %>+"")
            <% }  %>
    <% }) %>

  , {
      <% apiItem.requestParam.forEach(paramItem=>{ %>
       <% if (!paramItem.isInPath) { %>
          <%=['string','integer','number','date','file'].includes(paramItem.jsonSchema.type)?"":"..."%><%=paramItem.name%>,
        <% }  %>

      <% }) %>
  });
  return  result.data;
}
<% }) %>


export default {
<% webapiGroup.apis.forEach(apiItem=>{ %>
    <%=Util.getMethodName(apiItem.name)%>,
<% }) %>
};



<%-tsDefinded%>

//create by moon https://github.com/creasy2010/moon